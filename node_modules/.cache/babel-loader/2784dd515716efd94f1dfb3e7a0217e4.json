{"ast":null,"code":"var _jsxFileName = \"/Users/TB/Thinkful/practice-with-vscode/Project_Pomodoro_Timer_Qualified_1/src/duration-handler/DurationHandler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DurationHandler() {\n  _s();\n\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [progressMax, setProgressMax] = useState(0);\n  const [progress, setProgress] = useState(0);\n  useInterval(() => {\n    setProgress(secondsScaled(progressMax - session.timeRemaining));\n    setProgressMax(session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60);\n\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n  * Called whenever the play/pause button is clicked.\n  */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stopButton() {\n    setIsTimerRunning(false);\n    setSession(null);\n  }\n\n  function secondsScaled(remaining) {\n    return 100 - (progressMax - remaining) / progressMax * 100;\n  }\n\n  function focusHandler(focus) {\n    focus === \"decrease\" ? setFocusDuration(Math.max(focusDuration - 5, 5)) : setFocusDuration(Math.min(focusDuration + 5, 60));\n  }\n\n  function breakHandler(word) {\n    word === \"decrease\" ? setBreakDuration(Math.max(breakDuration - 1, 1)) : setBreakDuration(Math.min(breakDuration + 1, 15));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group input-group-lg mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text\",\n            \"data-testid\": \"duration-focus\",\n            children: [\"Focus Duration: \", minutesToDuration(focusDuration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-testid\": \"decrease-focus\",\n              onClick: () => focusHandler(\"decrease\"),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-minus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-testid\": \"increase-focus\",\n              onClick: () => focusHandler(\"increase\"),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group input-group-lg mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              \"data-testid\": \"duration-break\",\n              children: [\"Break Duration: \", minutesToDuration(breakDuration)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-testid\": \"decrease-break\",\n                onClick: () => breakHandler(\"decrease\"),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"oi oi-minus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-testid\": \"increase-break\",\n                onClick: () => breakHandler(\"increase\"),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"oi oi-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DurationHandler, \"BN8Pog1d1b9sQY5DW+09Ou619fM=\", false, function () {\n  return [useInterval];\n});\n\n_c = DurationHandler;\nexport default DurationHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"DurationHandler\");","map":{"version":3,"sources":["/Users/TB/Thinkful/practice-with-vscode/Project_Pomodoro_Timer_Qualified_1/src/duration-handler/DurationHandler.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","DurationHandler","isTimerRunning","setIsTimerRunning","session","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","progressMax","setProgressMax","progress","setProgress","secondsScaled","timeRemaining","label","Audio","play","nextSession","nextTick","playPause","prevState","nextState","prevStateSession","stopButton","remaining","focusHandler","focus","Math","max","min","breakHandler","word"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from \"../utils/duration\";\nimport {secondsToDuration} from \"../utils/duration\";\n\n\nfunction DurationHandler() {\n    // Timer starts out paused\n    const [isTimerRunning, setIsTimerRunning] = useState(false);\n    // // The current session - null where there is no session running\n    const [session, setSession] = useState(null);\n    const [focusDuration, setFocusDuration] = useState(25);\n    const [breakDuration, setBreakDuration] = useState(5);\n    const [progressMax, setProgressMax] = useState(0);\n    const [progress, setProgress] = useState(0);\n\n    useInterval(\n        () => {\n            setProgress(secondsScaled(progressMax - session.timeRemaining));\n            setProgressMax(\n                (session.label === \"Focusing\") ? (focusDuration * 60) : (breakDuration * 60)\n            );\n\n            if (session.timeRemaining === 0) {\n                new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n                return setSession(nextSession(focusDuration, breakDuration));\n            }\n            return setSession(nextTick);\n        },\n        isTimerRunning ? 1000 : null\n    );\n\n    /**\n    * Called whenever the play/pause button is clicked.\n    */\n    function playPause() {\n        setIsTimerRunning((prevState) => {\n            const nextState = !prevState;\n            if (nextState) {\n                setSession((prevStateSession) => {\n                    // If the timer is starting and the previous session is null,\n                    // start a focusing session.\n                    if (prevStateSession === null) {\n                        return {\n                            label: \"Focusing\",\n                            timeRemaining: focusDuration * 60,\n                        };\n                    }\n                    return prevStateSession;\n                });\n            }\n            return nextState;\n        });\n    }\n\n\n    function stopButton() {\n        setIsTimerRunning(false);\n        setSession(null);\n    }\n\n    function secondsScaled(remaining) {\n        return 100 - (progressMax - remaining) / (progressMax) * 100\n    }\n\n    function focusHandler(focus) {\n        (focus === \"decrease\") ? setFocusDuration(Math.max(focusDuration - 5, 5)) : setFocusDuration(Math.min(focusDuration + 5, 60))\n    }\n    function breakHandler(word) {\n        (word === \"decrease\") ? setBreakDuration(Math.max(breakDuration - 1, 1)) : setBreakDuration(Math.min(breakDuration + 1, 15))\n    }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => focusHandler(\"decrease\")}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => focusHandler(\"increase\")}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => breakHandler(\"decrease\")}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => breakHandler(\"increase\")}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DurationHandler;\n"]},"metadata":{},"sourceType":"module"}